from pydantic.dataclasses import dataclass
from dataclasses_json import dataclass_json
from typing import List
from enum import IntEnum

@dataclass_json
@dataclass
class Client:
    '''Object representing a client onboarded to octoductor.'''
    org: str
    repo: str
    ts: str

@dataclass_json
@dataclass
class BoardingRequest:
    org: str
    repo: str
    sender: str
    correlation_id: str
    ts: str

@dataclass_json
@dataclass
class Repository:
    org: str
    repo: str
    private: bool
    reference: str = None
    pull_request_number: int = None
    default_branch: str = None
    language: str = None

class Trigger(IntEnum):
    GH_PULL_REQUEST = 0
    GH_RELEASE = 1
    CRON = 2
    BOOTSTRAP = 3
    ONBOARDED = 4

class EvaluationStatus(IntEnum):
    PASS = 0
    PARTIAL = 1
    FAIL = 2
    NA = 3

class Badge(IntEnum):
    NONE = 0
    BRONZE = 1
    SILVER = 2
    GOLD = 3

class RequirementGroup(IntEnum):
    CUSTOMER_OBSESSION = 0
    STAKEHOLDER = 1
    ENGINEERING = 2
    OPERATIONS = 3

@dataclass_json
@dataclass
class EvaluationRequest:
    '''Object to trigger an evaluation run for a pre-defined list of repositories.'''
    repositories: List[Repository]
    sender: str
    correlation_id: str
    ts: str
    trigger: Trigger 

@dataclass_json
@dataclass
class Evaluation:
    repository: Repository
    '''Overall score (value between 0.0 and 1.0)'''
    score: float
    '''Name of the requirement group'''
    requirement_group: RequirementGroup
    '''Name of the requirement assessed'''
    requirement: str
    status: EvaluationStatus
    badge: Badge
    '''Should this requirement show up as a GitHub check?'''
    gh_check: bool
    '''Some arbitrary information you would like to capture along with the evaluation'''    
    blob: str = ""

@dataclass_json
@dataclass
class EvaluationResponse:
    '''Object containing evaluation results.'''
    evaluation: List[Evaluation]
    trigger: Trigger
    sender: str
    correlation_id: str
    ts: str

@dataclass_json
@dataclass
class CollectorRequest:
    '''
    Object containing a list of evaluation responses.
    This is generated by the reduce step in the evaluation workflow DAG.
    '''
    evaluation_responses: List[EvaluationResponse]

@dataclass_json
@dataclass
class ClientEvaluation:
    '''
    Object containing a list of evaluation responses for a specific client.
    '''
    client_identifier: str
    sender: str
    trigger: Trigger
    evaluation_responses: List[Evaluation]
    correlation_id: str
    ts: str
    global_score: float = None
    global_badge: Badge = Badge.NONE
    blob: str = ""
    score_badge_rendered: str = ""
    badge_badge_rendered: str = ""

    def set_global_score(self, score: float) -> None:
        self.global_score = score

    def set_global_badge(self, badge: Badge) -> None:
        self.global_badge = badge

    def set_blob(self, blob: str) -> None:
        self.blob = blob

    def set_rendered_badge(self, badge: str) -> None:
        self.badge_badge_rendered = badge

    def set_rendered_score_badge(self, badge: str) -> None:
        self.score_badge_rendered = badge

@dataclass_json
@dataclass
class CollectorResponse:
    '''
    Object containing a list of client evaluation responses.
    '''
    client_evaluations: List[ClientEvaluation]